---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Kubernetes The Hard Way Network, such as VPC and Routing'

Parameters:
  Environment:
    Type: String
    Description: Name for this Environment

  VpcBlock:
    Type: String
    Default: 10.30.0.0/16
    Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.

  Subnet01Block:
    Type: String
    Default: 10.30.0.0/19
    Description: CidrBlock for subnet 01 within the VPC

  Subnet02Block:
    Type: String
    Default: 10.30.32.0/19
    Description: CidrBlock for subnet 02 within the VPC

  Subnet03Block:
    Type: String
    Default: 10.30.64.0/19
    Description: CidrBlock for subnet 03 within the VPC

  Subnet04Block:
    Type: String
    Default: 10.30.96.0/19
    Description: CidrBlock for subnet 01 within the VPC

  Subnet05Block:
    Type: String
    Default: 10.30.128.0/19
    Description: CidrBlock for subnet 02 within the VPC

  Subnet06Block:
    Type: String
    Default: 10.30.160.0/19
    Description: CidrBlock for subnet 03 within the VPC

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Worker Network Configuration"
        Parameters:
          - VpcBlock
          - Subnet01Block
          - Subnet02Block
          - Subnet03Block
          - Subnet04Block
          - Subnet05Block
          - Subnet06Block

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:  !Ref VpcBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-VPC'
      - Key: env
        Value: !Ref Environment

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
      - Key: env
        Value: !Ref Environment


  VPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  NatGatewayEipAZ1:
    DependsOn:
    - VPCGatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGatewayEipAZ2:
    DependsOn:
    - VPCGatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  
  NatGatewayEipAZ3:
    DependsOn:
    - VPCGatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGatewayAZ1:
    DependsOn:
    - NatGatewayEipAZ1
    - PubSubnet01
    - VPCGatewayAttachment
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NatGatewayEipAZ1
        - AllocationId
      SubnetId:
        Ref: PubSubnet01
      Tags:
      - Key: env
        Value: !Ref Environment

  NatGatewayAZ2:
    DependsOn:
    - NatGatewayEipAZ2
    - PubSubnet02
    - VPCGatewayAttachment
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NatGatewayEipAZ2
        - AllocationId
      SubnetId:
        Ref: PubSubnet02
      Tags:
      - Key: env
        Value: !Ref Environment

  NatGatewayAZ3:
    DependsOn:
    - NatGatewayEipAZ3
    - PubSubnet03
    - VPCGatewayAttachment
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NatGatewayEipAZ3
        - AllocationId
      SubnetId:
        Ref: PubSubnet03
      Tags:
      - Key: env
        Value: !Ref Environment

  PubRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Public Subnets
      - Key: Network
        Value: Public
      - Key: env
        Value: !Ref Environment

  Route:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PubRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  
  PrivRouteTableAZ1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: PrivRouteTableAZ1
      - Key: Network
        Value: Private
      - Key: env
        Value: !Ref Environment
  
  PrivRouteTableAZ2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: PrivRouteTableAZ2
      - Key: Network
        Value: Private
      - Key: env
        Value: !Ref Environment

  PrivRouteTableAZ3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: PrivRouteTableAZ3
      - Key: Network
        Value: Private
      - Key: env
        Value: !Ref Environment

  PrivRouteAZ1:
    DependsOn:
    - PrivRouteTableAZ1
    - NatGatewayAZ1
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivRouteTableAZ1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGatewayAZ1

  PrivRouteAZ2:
    DependsOn:
    - PrivRouteTableAZ2
    - NatGatewayAZ2
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivRouteTableAZ2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGatewayAZ2

  PrivRouteAZ3:
    DependsOn:
    - PrivRouteTableAZ3
    - NatGatewayAZ3
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivRouteTableAZ3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGatewayAZ3


  PubSubnet01:
    Type: AWS::EC2::Subnet
    Metadata:
      Comment: Public Subnet 01
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: Subnet01Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-PubSubnet01"
      - Key: env
        Value: !Ref Environment
      - Key: kubernetes.io/role/elb
        Value: 1
  
  PubSubnet02:
    Type: AWS::EC2::Subnet
    Metadata:
      Comment: Public Subnet 02
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: Subnet02Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-PubSubnet02"
      - Key: env
        Value: !Ref Environment
      - Key: kubernetes.io/role/elb
        Value: 1

  PubSubnet03:
    Type: AWS::EC2::Subnet
    Metadata:
      Comment: Public Subnet 03
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '2'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: Subnet03Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-PubSubnet03"
      - Key: env
        Value: !Ref Environment
      - Key: kubernetes.io/role/elb
        Value: 1

  PrivSubnet04:
    Type: AWS::EC2::Subnet
    Metadata:
      Comment: Private Subnet 04
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: Subnet04Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-PrivSubnet04"
      - Key: kubernetes.io/role/internal-elb
        Value: 1
      - Key: env
        Value: !Ref Environment

  PrivSubnet05:
    Type: AWS::EC2::Subnet
    Metadata:
      Comment: Private Subnet 05
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: Subnet05Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-PrivSubnet05"
      - Key: kubernetes.io/role/internal-elb
        Value: 1
      - Key: env
        Value: !Ref Environment

  PrivSubnet06:
    Type: AWS::EC2::Subnet
    Metadata:
      Comment: Private Subnet 06
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '2'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: Subnet06Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-PrivSubnet06"
      - Key: kubernetes.io/role/internal-elb
        Value: 1
      - Key: env
        Value: !Ref Environment

  Subnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PubSubnet01
      RouteTableId: !Ref PubRouteTable

  Subnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PubSubnet02
      RouteTableId: !Ref PubRouteTable

  Subnet03RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PubSubnet03
      RouteTableId: !Ref PubRouteTable

  Subnet04RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivSubnet04
      RouteTableId: !Ref PrivRouteTableAZ1

  Subnet05RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivSubnet05
      RouteTableId: !Ref PrivRouteTableAZ2

  Subnet06RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivSubnet06
      RouteTableId: !Ref PrivRouteTableAZ3
